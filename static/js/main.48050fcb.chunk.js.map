{"version":3,"sources":["components/GoodsList/GoodsList.tsx","components/ButtonGenerator/ButtonGenerator.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","ButtonGenerator","name","method","type","onClick","goodsFromServer","App","state","goodsList","visibility","lengthLimit","visibilitySwitch","setState","prevState","reverseList","reverse","sortAlphabetically","sort","good1","good2","localeCompare","resetList","sortbyLength","length","changeLimit","event","target","value","filter","this","onChange","Array","fill","item","index","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mSAOaA,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,qBAAIC,UAAU,OAAd,UACE,uBACCD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,gCAAzB,SACGE,GADMA,UCJJC,G,MAAkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OAC7C,wBACEC,KAAK,SACLN,UAAU,iDACVO,QAASF,EAHX,SAKGD,MCTCI,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWIC,E,4MACJC,MAAQ,CACNC,UAAU,GAAD,OAAMH,GACfI,YAAY,EACZC,YAAa,G,EAGfC,iBAAmB,WACjB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,YAAaI,EAAUJ,gB,EAI3BK,YAAc,WACZ,EAAKF,UAAS,SAACC,GAAD,MAAgB,CAC5BL,UAAW,YAAIK,EAAUL,WAAWO,e,EAIxCC,mBAAqB,WACnB,EAAKJ,UAAS,SAACC,GAAD,MAAgB,CAC5BL,UAAW,YAAIK,EAAUL,WAAWS,MAClC,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,W,EAK5CE,UAAY,WACV,EAAKT,UAAS,iBAAO,CACnBJ,UAAU,GAAD,OAAMH,GACfK,YAAa,O,EAIjBY,aAAe,WACb,EAAKV,UAAS,SAACC,GAAD,MAAgB,CAC5BL,UAAW,YAAIK,EAAUL,WAAWS,MAClC,SAACC,EAAOC,GAAR,OAAkBD,EAAMK,OAASJ,EAAMI,e,EAK7CC,YAAc,SAACC,GACb,EAAKb,UAAS,iBAAO,CACnBF,aAAce,EAAMC,OAAOC,MAC3BnB,UAAW,UAAIH,GACZuB,QAAO,SAAA7B,GAAI,OAAIA,EAAKwB,SAAWE,EAAMC,OAAOC,c,4CAInD,WACE,OACE,sBAAK9B,UAAU,wBAAf,UACE,uBACA,oBAAIA,UAAU,aAAd,iCACEgC,KAAKtB,MAAME,YACR,cAAC,EAAD,CAAiBR,KAAK,QAAQC,OAAQ2B,KAAKlB,mBAC/CkB,KAAKtB,MAAME,YAEV,qCACE,cAAC,EAAD,CAAiBR,KAAK,UAAUC,OAAQ2B,KAAKf,cAC7C,cAAC,EAAD,CACEb,KAAK,sBACLC,OAAQ2B,KAAKb,qBAEf,cAAC,EAAD,CAAiBf,KAAK,QAAQC,OAAQ2B,KAAKR,YAC3C,cAAC,EAAD,CAAiBpB,KAAK,iBAAiBC,OAAQ2B,KAAKP,eACpD,qBAAKzB,UAAU,iDAAf,SACE,wBACE8B,MAAOE,KAAKtB,MAAMG,YAClBoB,SAAUD,KAAKL,YAFjB,SAIGO,MAAM,IAAIC,KAAK,UAAUlC,KAAI,SAACmC,EAAMC,GAAP,OAC5B,wBAAoCP,MAAOO,EAAQ,EAAnD,SAAuDA,EAAQ,GAA/D,UAAgBD,GAAhB,OAAuBC,EAAQ,WAIrC,cAAC,EAAD,CAAWtC,MAAOiC,KAAKtB,MAAMC,sB,GA7EvB2B,IAAMC,WAqFT9B,IC5Gf+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.48050fcb.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList:React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"list\">\n      <br />\n      {goods.map(good => (\n        <li key={good} className=\"list-item is-size-3 is-narrow\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './ButtonGenerator.scss';\n\ntype Props = {\n  name: string,\n  method:() => void,\n};\n\nexport const ButtonGenerator:React.FC<Props> = ({ name, method }) => (\n  <button\n    type=\"button\"\n    className=\"button is-info is-light is-outlined is-rounded\"\n    onClick={method}\n  >\n    {name}\n  </button>\n);\n","import React from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\nimport { ButtonGenerator } from './components/ButtonGenerator';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  goodsList : string[],\n  visibility : boolean,\n  lengthLimit : number,\n};\n\nclass App extends React.Component <Props, State> {\n  state = {\n    goodsList: [...goodsFromServer],\n    visibility: false,\n    lengthLimit: 1,\n  };\n\n  visibilitySwitch = () => {\n    this.setState((prevState) => ({\n      visibility: !prevState.visibility,\n    }));\n  };\n\n  reverseList = () => {\n    this.setState((prevState) => ({\n      goodsList: [...prevState.goodsList].reverse(),\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState((prevState) => ({\n      goodsList: [...prevState.goodsList].sort(\n        (good1, good2) => good1.localeCompare(good2),\n      ),\n    }));\n  };\n\n  resetList = () => {\n    this.setState(() => ({\n      goodsList: [...goodsFromServer],\n      lengthLimit: 1,\n    }));\n  };\n\n  sortbyLength = () => {\n    this.setState((prevState) => ({\n      goodsList: [...prevState.goodsList].sort(\n        (good1, good2) => good1.length - good2.length,\n      ),\n    }));\n  };\n\n  changeLimit = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState(() => ({\n      lengthLimit: +event.target.value,\n      goodsList: [...goodsFromServer]\n        .filter(good => good.length >= +event.target.value),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App has-text-centered\">\n        <br />\n        <h1 className=\"title is-1\">Goods list sorting</h1>\n        {!this.state.visibility\n          && <ButtonGenerator name=\"Start\" method={this.visibilitySwitch} />}\n        {this.state.visibility\n        && (\n          <>\n            <ButtonGenerator name=\"Reverse\" method={this.reverseList} />\n            <ButtonGenerator\n              name=\"Sort alphabetically\"\n              method={this.sortAlphabetically}\n            />\n            <ButtonGenerator name=\"Reset\" method={this.resetList} />\n            <ButtonGenerator name=\"Sort by length\" method={this.sortbyLength} />\n            <div className=\"select is-rounded is-info is-light is-outlined\">\n              <select\n                value={this.state.lengthLimit}\n                onChange={this.changeLimit}\n              >\n                {Array(10).fill('option').map((item, index) => (\n                  <option key={`${item}${index + 1}`} value={index + 1}>{index + 1}</option>\n                ))}\n              </select>\n            </div>\n            <GoodsList goods={this.state.goodsList} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}