{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","goodsFromServer","App","state","goodsList","visibility","lengthLimit","visibilitySwitch","setState","prevState","buttonGenerator","text","method","type","onClick","reverseList","reverse","sortABC","sort","good1","good2","localeCompare","initialOrder","byLength","length","changeLimit","event","target","value","filter","selectGenerator","limit","opts","i","push","onChange","option","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8QAOaA,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,qBAAIC,UAAU,OAAd,UACE,uBACCD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,gCAAzB,SACGE,GADMA,UCRXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWIC,E,4MACJC,MAAQ,CACNC,UAAU,GAAD,OAAMH,GACfI,YAAY,EACZC,YAAa,G,EAGfC,iBAAmB,WACjB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,YAAaI,EAAUJ,gB,EAI3BK,gBAAkB,SAACC,EAAaC,GAAd,OAChB,wBACEC,KAAK,SACLf,UAAU,iDACVgB,QAASF,EAHX,SAKGD,K,EAILI,YAAc,WACZ,EAAKP,UAAS,SAACC,GAAD,MAAgB,CAC5BL,UAAW,YAAIK,EAAUL,WAAWY,e,EAIxCC,QAAU,WACR,EAAKT,UAAS,SAACC,GAAD,MAAgB,CAC5BL,UAAW,YAAIK,EAAUL,WAAWc,MAClC,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,W,EAK5CE,aAAe,WACb,EAAKd,UAAS,iBAAO,CACnBJ,UAAU,GAAD,OAAMH,GACfK,YAAa,O,EAIjBiB,SAAW,WACT,EAAKf,UAAS,SAACC,GAAD,MAAgB,CAC5BL,UAAW,YAAIK,EAAUL,WAAWc,MAClC,SAACC,EAAOC,GAAR,OAAkBD,EAAMK,OAASJ,EAAMI,e,EAK7CC,YAAc,SAACC,GACb,EAAKlB,UAAS,iBAAO,CACnBF,aAAcoB,EAAMC,OAAOC,MAC3BxB,UAAW,UAAIH,GACZ4B,QAAO,SAAA7B,GAAI,OAAIA,EAAKwB,SAAWE,EAAMC,OAAOC,c,EAInDE,gBAAkB,SAACC,GAGjB,IAFA,IAAMC,EAAO,GAEJC,EAAI,EAAGA,GAAKF,EAAOE,GAAK,EAC/BD,EAAKE,KAAKD,GAGZ,OACE,qBAAKnC,UAAU,iDAAf,SACE,wBACE8B,MAAO,EAAKzB,MAAMG,YAClB6B,SAAU,EAAKV,YAFjB,SAIGO,EAAKjC,KAAI,SAAAqC,GAAM,OAAI,wBAAQR,MAAK,UAAKQ,GAAlB,SAA6BA,Y,4CAMzD,WACE,OACE,sBAAKtC,UAAU,wBAAf,UACE,uBACA,oBAAIA,UAAU,aAAd,iCACEuC,KAAKlC,MAAME,YACRgC,KAAK3B,gBAAgB,QAAS2B,KAAK9B,kBACvC8B,KAAKlC,MAAME,YAEV,qCACGgC,KAAK3B,gBAAgB,UAAW2B,KAAKtB,aACrCsB,KAAK3B,gBAAgB,sBAAuB2B,KAAKpB,SACjDoB,KAAK3B,gBAAgB,QAAS2B,KAAKf,cACnCe,KAAK3B,gBAAgB,iBAAkB2B,KAAKd,UAC5Cc,KAAKP,gBAAgB,IAEtB,cAAC,EAAD,CAAWjC,MAAOwC,KAAKlC,MAAMC,sB,GA/FvBkC,IAAMC,WAuGTrC,IC7HfsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3d6c2377.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList:React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"list\">\n      <br />\n      {goods.map(good => (\n        <li key={good} className=\"list-item is-size-3 is-narrow\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  goodsList : string[],\n  visibility : boolean,\n  lengthLimit : number,\n};\n\nclass App extends React.Component <Props, State> {\n  state = {\n    goodsList: [...goodsFromServer],\n    visibility: false,\n    lengthLimit: 1,\n  };\n\n  visibilitySwitch = () => {\n    this.setState((prevState) => ({\n      visibility: !prevState.visibility,\n    }));\n  };\n\n  buttonGenerator = (text:string, method:() => void) => (\n    <button\n      type=\"button\"\n      className=\"button is-info is-light is-outlined is-rounded\"\n      onClick={method}\n    >\n      {text}\n    </button>\n  );\n\n  reverseList = () => {\n    this.setState((prevState) => ({\n      goodsList: [...prevState.goodsList].reverse(),\n    }));\n  };\n\n  sortABC = () => {\n    this.setState((prevState) => ({\n      goodsList: [...prevState.goodsList].sort(\n        (good1, good2) => good1.localeCompare(good2),\n      ),\n    }));\n  };\n\n  initialOrder = () => {\n    this.setState(() => ({\n      goodsList: [...goodsFromServer],\n      lengthLimit: 1,\n    }));\n  };\n\n  byLength = () => {\n    this.setState((prevState) => ({\n      goodsList: [...prevState.goodsList].sort(\n        (good1, good2) => good1.length - good2.length,\n      ),\n    }));\n  };\n\n  changeLimit = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState(() => ({\n      lengthLimit: +event.target.value,\n      goodsList: [...goodsFromServer]\n        .filter(good => good.length >= +event.target.value),\n    }));\n  };\n\n  selectGenerator = (limit:number) => {\n    const opts = [];\n\n    for (let i = 1; i <= limit; i += 1) {\n      opts.push(i);\n    }\n\n    return (\n      <div className=\"select is-rounded is-info is-light is-outlined\">\n        <select\n          value={this.state.lengthLimit}\n          onChange={this.changeLimit}\n        >\n          {opts.map(option => <option value={`${option}`}>{option}</option>)}\n        </select>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App has-text-centered\">\n        <br />\n        <h1 className=\"title is-1\">Goods list sorting</h1>\n        {!this.state.visibility\n          && this.buttonGenerator('Start', this.visibilitySwitch)}\n        {this.state.visibility\n        && (\n          <>\n            {this.buttonGenerator('Reverse', this.reverseList)}\n            {this.buttonGenerator('Sort alphabetically', this.sortABC)}\n            {this.buttonGenerator('Reset', this.initialOrder)}\n            {this.buttonGenerator('Sort by length', this.byLength)}\n            {this.selectGenerator(10)}\n            {/* in the line above You can change upper limit for options of Select tag */}\n            <GoodsList goods={this.state.goodsList} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}